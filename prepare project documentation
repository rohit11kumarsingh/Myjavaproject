Objective: Create comprehensive documentation covering 
the system's purpose, features, usage, and code structure. 
Library Management System 
Overview 
This is a console-based Library Management System 
implemented in Java. It allows users to manage a collection 
of books with features such as adding, viewing, and 
deleting books, as well as searching by title or ID. The 
system includes data validation, error handling, and 
persistent storage. 
Features:- 
:-Add Book: Add a new book with a unique ID, title, 
author). 
:-Display Books: View all books in the library. 
:-Search Book: Search for books by title (case-insensitive) 
or ID. 
:-Delete Book: Remove a book by ID with confirmation. 
:-Persistent Storage: Saves books to a file (library.txt) for 
data persistence. 
Requirements 
Java 8 or higher 
No external libraries required 
Project Structure 
LibraryManagementSystem/ 
Book.java: Represents a book with title, author, and ID. 
Library.java: Manages the book collection and implements 
core operations. 
Main.java: Provides a console-based user interface. 
library.txt: Stores book data (created automatically). 
Usage 
**Compile and Run: 
javac Book.java Library.java Main.java 
java Main 
Interact with the Menu: 
Choose options 1-6 to perform operations. 
Follow prompts to enter book details or search queries. 
Book IDs must start with "B" followed by digits (e.g., B001). 
Press Enter after each operation to continue. 
Example Interaction 
Library Management System 
1. Add Book 
2. Display All Books 
3. Search Book by Title 
4. Search Book by ID 
5. Delete Book 
6. Exit 
Enter choice: 1 
Enter title: The Great Gatsby 
Enter author: F. Scott Fitzgerald 
Enter ID: B001 
Book added: ID: B001, Title: The Great Gatsby, Author: F. 
Scott Fitzgerald 
Code Quality 
Encapsulation: Book fields are private with getter methods 
for access. 
Error Handling: Validates inputs and handles invalid 
formats or duplicates. 
Documentation: Javadoc comments are provided for all 
methods. 
Persistence: Books are saved to and loaded from a file. 
Modularity: Clear separation of concerns between data 
model (Book), logic (Library), and UI (Main). 
Limitations 
File-based storage may not scale to large datasets. 
No advanced search features (e.g., partial matches). 
Console-based interface limits user experience. 
Future Enhancements 
Add a graphical user interface (GUI) using JavaFX or Swing. 
Support additional book attributes (e.g., ISBN, publication 
year). 
Implement a database for scalable storage. 
Add borrowing/returning functionality for a full LMS. 
License 
This project is licensed under the MIT License.
